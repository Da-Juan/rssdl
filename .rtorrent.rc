# This is an example resource file for rTorrent. Copy to
# ~/.rtorrent.rc and enable/modify the options as needed. Remember to
# uncomment the options you wish to enable.

# Maximum and minimum number of peers to connect to per torrent.
min_peers = 1
max_peers = 100

# Same as above but for seeding completed torrents (-1 = same as downloading)
min_peers_seed = 1
max_peers_seed = 50

# Maximum number of uploads single torrent may use
max_uploads = 10

# Maximum number of simultaneous downloads
max_downloads_global = 10
# Maximum number of simultaneous uploads
max_uploads_global = 20

# Global upload and download rate in KiB. "0" for unlimited.
download_rate = 0
upload_rate = 2000

# Default directory to save the downloaded torrents.
directory = /home/rtorrent/InProgress

# Default session directory. Make sure you don't run multiple instance
# of rtorrent using the same session directory. Perhaps using a
# relative path?
session = /home/rtorrent/.sessions

# Watch a directory for new torrents, and stop those that have been
# deleted.
#schedule = watch_directory,5,5,load_start=/home/rtorrent/Torrents/*.torrent
#*/
#schedule = tied_directory,6,5,start_tied=
#schedule = untied_directory,7,5,stop_untied=
schedule2 = watch_directory_1,5,5,"load.start=/home/rtorrent/Torrents/Dir1/*.torrent,d.custom1.set=/home/rtorrent/Finished/Dir1/"
schedule2 = watch_directory_2,5,5,"load.start=/home/rtorrent/Torrents/Dir2/*.torrent,d.custom1.set=/home/rtorrent/Finished/Dir2/"

# On completion, move the torrent to the directory from custom1 or to default directory if custom1 is not set.
method.insert = is_custom1_set,simple,"and={d.custom1=}"
method.insert = move_to_default_dir,simple,"d.directory.set=/home/rtorrent/Finished/;execute=mv,-u,$d.get_base_path=,/home/rtorrent/Finished/;execute=/home/rtorrent/Scripts/rssdl/rtorrentlog.sh,$d.get_name="
method.insert = move_to_custom1,simple,"d.directory.set=$d.custom1=;execute=mv,-u,$d.get_base_path=,$d.custom1=;execute=/home/rtorrent/Scripts/rssdl/rtorrentlog.sh,$d.get_name="
method.set_key = event.download.finished,move_complete,"branch=is_custom1_set=,move_to_custom1=,move_to_default_dir="

# Close torrents when diskspace is low.
schedule = low_diskspace,5,60,close_low_diskspace=2000M

# Periodically save session data
schedule = session_save,240,300,session_save=

# Enable the default ratio group.
ratio.enable=
# Change the limits, the defaults should be sufficient.
# Upload to a minimum ratio of 1.0
ratio.min.set=100
# Upload to a maximum ratio of 3.0
ratio.max.set=300
# Upload a minimum of 1GB
ratio.upload.set=1G

# When seeding ratio is reached close the torrent
system.method.set = group.seeding.ratio.command, d.close=

# Port range to use for listening.
port_range = 33101-33199

# Start opening ports at a random position within the port range.
port_random = yes

# Encryption options, set to none (default) or any combination of the following:
# allow_incoming, try_outgoing, require, require_RC4, enable_retry, prefer_plaintext
#
# The example value allows incoming encrypted connections, starts unencrypted
# outgoing connections but retries with encryption if they fail, preferring
# plaintext to RC4 encryption after the encrypted handshake
#
encryption = allow_incoming,try_outgoing,enable_retry,prefer_plaintext

# Sort the main view by ratio
view.sort_current = main,greater=d.get_ratio=
view.sort_new = main,less=d.get_ratio=
view.sort = main

# Sort the seeding view by the upload rate and only show torrents with peers
view.sort_current = seeding,greater=d.get_up_rate=
view.filter = seeding,"and=d.get_complete=,d.get_peers_connected="
view.sort_new = seeding,less=d.get_up_rate=
view.sort = seeding

# Sort the leeching view by name
view.sort_current = leeching,greater=d.get_name=
view.sort_new = leeching,greater=d.get_name=
view.sort = leeching

# Filter the active view by connected peers
view.sort_current = active,less=d.get_name=
view.sort_new = leeching,less=d.get_name=
view.filter = active,d.get_peers_connected=
view.sort = active

schedule = sort_main,11,5,view.sort=main
schedule = sort_seeding,12,5,view.sort=seeding
schedule = sort_leeching,13,5,view.sort=leeching
schedule = sort_active,14,5,view.sort=active

# Enable DHT support for trackerless torrents or when all trackers are down.
# May be set to "disable" (completely disable DHT), "off" (do not start DHT),
# "auto" (start and stop DHT as needed), or "on" (start DHT immediately).
# The default is "off". For DHT to work, a session directory must be defined.
# 
dht = auto

# UDP port to use for DHT. 
# 
dht_port = 6881

# Enable peer exchange (for torrents not marked private)
#
#peer_exchange = yes
